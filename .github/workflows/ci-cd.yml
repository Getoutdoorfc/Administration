name: CI/CD Pipeline with Deployment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  php-tests:
    runs-on: ubuntu-latest

    steps:
      # Tjekker kode ud fra main-branch
      - name: Checkout code
        uses: actions/checkout@v2

      # Opsætter PHP med relevante extensions
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'
          extensions: mbstring, xml, intl
          tools: composer

      # Installerer alle afhængigheder inklusive udviklingsværktøjer
      - name: Install dependencies
        run: composer install --no-progress --no-suggest --prefer-dist

      # Kører PHP CodeSniffer for at kontrollere kodestandarder
      - name: Run PHP CodeSniffer
        run: |
          ./vendor/bin/phpcs --standard=your_custom_standard.xml src/ || true

      # Anvender PHP CodeSniffer til at rette fejl automatisk, hvis det er muligt
      - name: Run PHP CodeSniffer and Fix
        run: ./vendor/bin/phpcbf --standard=your_custom_standard.xml src/
        continue-on-error: true

      # Kører PHPUnit tests for at sikre koden fungerer korrekt
      - name: Run PHPUnit Tests
        run: ./vendor/bin/phpunit --testdox

      # Genererer dokumentation med phpDocumentor
      - name: Generate Documentation with phpDocumentor
        run: ./vendor/bin/phpdoc -d src -t docs

  deploy:
    runs-on: ubuntu-latest
    needs: php-tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Installerer kun produktionsafhængigheder for at reducere mængden af filer
      - name: Install only production dependencies
        run: composer install --no-dev --optimize-autoloader

      # Fjerner dokumentation og udviklingsfiler for at lette deployment
      - name: Cleanup unnecessary files
        run: |
          rm -rf docs/  # Fjern dokumentation
          rm -rf tests/  # Fjern testfiler
          rm -rf .github/ # Fjern GitHub Actions konfiguration

      # Uploader filerne til FTP-serveren
      - name: Deploy to FTP server
        uses: SamKirkland/FTP-Deploy-Action@4.0.0
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: "./"
          remote-dir: "/staging/wp-content/plugins"
          git-ftp-args: --auto-init
